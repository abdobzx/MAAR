#!/bin/bash

echo "üîç Monitoring Docker build - Detection du probl√®me 'resolution-too-deep'..."
echo "D√©marr√© √† $(date)"
echo "============================================"

BUILD_LOG="docker-build-final.log"
RESOLUTION_DEEP_DETECTED=0
BUILD_SUCCESS=0

# Fonction pour analyser les logs
analyze_logs() {
    if [ -f "$BUILD_LOG" ]; then
        # Chercher le probl√®me resolution-too-deep
        if grep -q "resolution-too-deep\|ResolutionTooDeep\|maximum recursion depth" "$BUILD_LOG"; then
            echo "‚ùå PROBL√àME D√âTECT√â: resolution-too-deep trouv√© dans les logs!"
            RESOLUTION_DEEP_DETECTED=1
            echo "Derni√®res lignes avec le probl√®me:"
            grep -n -A 5 -B 5 "resolution-too-deep\|ResolutionTooDeep\|maximum recursion depth" "$BUILD_LOG" | tail -20
        fi
        
        # Chercher les signes de succ√®s
        if grep -q "Successfully built\|Successfully tagged" "$BUILD_LOG"; then
            echo "‚úÖ BUILD R√âUSSI: Image construite avec succ√®s!"
            BUILD_SUCCESS=1
        fi
        
        # Afficher les erreurs pip
        if grep -q "ERROR:\|FAILED:\|Could not find" "$BUILD_LOG"; then
            echo "‚ö†Ô∏è  Erreurs pip d√©tect√©es:"
            grep -n "ERROR:\|FAILED:\|Could not find" "$BUILD_LOG" | tail -10
        fi
        
        # Afficher le statut g√©n√©ral
        echo ""
        echo "üìä STATUT ACTUEL:"
        echo "- Taille du log: $(wc -l < "$BUILD_LOG") lignes"
        echo "- Resolution-too-deep d√©tect√©: $([ $RESOLUTION_DEEP_DETECTED -eq 1 ] && echo "OUI" || echo "NON")"
        echo "- Build termin√© avec succ√®s: $([ $BUILD_SUCCESS -eq 1 ] && echo "OUI" || echo "NON")"
        
        # Derni√®res lignes du build
        echo ""
        echo "üìù Derni√®res lignes du build:"
        tail -10 "$BUILD_LOG"
    else
        echo "‚è≥ Fichier de log non encore cr√©√©..."
    fi
}

# Monitoring en continu
while true; do
    clear
    echo "üîç Monitoring Docker build - $(date)"
    echo "============================================"
    
    analyze_logs
    
    # Arr√™ter si build termin√© (succ√®s ou √©chec)
    if [ $BUILD_SUCCESS -eq 1 ] || [ $RESOLUTION_DEEP_DETECTED -eq 1 ]; then
        echo ""
        echo "üèÅ MONITORING TERMIN√â"
        if [ $BUILD_SUCCESS -eq 1 ]; then
            echo "‚úÖ Le build s'est termin√© avec SUCC√àS!"
            echo "‚úÖ Le probl√®me 'resolution-too-deep' semble R√âSOLU!"
        elif [ $RESOLUTION_DEEP_DETECTED -eq 1 ]; then
            echo "‚ùå Le probl√®me 'resolution-too-deep' est toujours pr√©sent."
            echo "‚ùå Il faut continuer l'it√©ration sur le Dockerfile.final"
        fi
        break
    fi
    
    # V√©rifier si le processus Docker build est encore actif
    if ! pgrep -f "docker build" > /dev/null; then
        echo ""
        echo "‚ö†Ô∏è  Le processus Docker build ne semble plus actif."
        echo "V√©rification finale des logs..."
        analyze_logs
        break
    fi
    
    sleep 15
done

echo ""
echo "üìã RAPPORT FINAL:"
echo "- Resolution-too-deep d√©tect√©: $([ $RESOLUTION_DEEP_DETECTED -eq 1 ] && echo "OUI" || echo "NON")"
echo "- Build r√©ussi: $([ $BUILD_SUCCESS -eq 1 ] && echo "OUI" || echo "NON")"
echo "- Log complet disponible dans: $BUILD_LOG"
