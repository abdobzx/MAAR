# Plateforme MAR - Configuration Environnement
# Copiez ce fichier en .env et adaptez les valeurs à votre environnement

# =============================================================================
# CONFIGURATION GÉNÉRALE
# =============================================================================

# Mode de développement (true/false)
DEV_MODE=true

# Niveau de logging (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Version de la plateforme
MAR_VERSION=1.0.0

# =============================================================================
# API CONFIGURATION
# =============================================================================

# Port d'écoute de l'API
API_PORT=8000

# Hôte d'écoute de l'API
API_HOST=0.0.0.0

# Nombre de workers Uvicorn
API_WORKERS=1

# Reload automatique en développement
API_RELOAD=true

# =============================================================================
# AUTHENTIFICATION & SÉCURITÉ
# =============================================================================

# Clé secrète JWT (CHANGEZ EN PRODUCTION!)
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production

# Algorithme JWT
JWT_ALGORITHM=HS256

# Durée de validité des tokens JWT (en minutes)
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# Clés API autorisées (séparées par des virgules)
API_KEYS=sk-mar-demo-key-123,sk-mar-prod-key-456

# =============================================================================
# VECTOR STORE CONFIGURATION
# =============================================================================

# Type de vector store (faiss, chroma)
VECTOR_STORE_TYPE=faiss

# Répertoire de persistance du vector store
VECTOR_STORE_PATH=./data/vector_store

# Modèle d'embedding à utiliser
EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2

# Dimension des vecteurs (dépend du modèle d'embedding)
VECTOR_DIMENSION=384

# Taille par défaut des chunks de documents
DEFAULT_CHUNK_SIZE=1000

# Chevauchement par défaut entre chunks
DEFAULT_CHUNK_OVERLAP=200

# Taille maximale des fichiers à ingérer (en MB)
MAX_FILE_SIZE_MB=50

# =============================================================================
# LLM CONFIGURATION (OLLAMA)
# =============================================================================

# URL de base d'Ollama
OLLAMA_BASE_URL=http://localhost:11434

# Modèle LLM par défaut
DEFAULT_LLM_MODEL=llama2

# Modèles LLM disponibles (séparés par des virgules)
AVAILABLE_MODELS=llama2,mistral,codellama,phi

# Timeout pour les requêtes LLM (en secondes)
LLM_TIMEOUT=120

# Température par défaut pour la génération
LLM_TEMPERATURE=0.7

# Nombre max de tokens à générer
LLM_MAX_TOKENS=2048

# =============================================================================
# AGENTS CONFIGURATION
# =============================================================================

# Agents actifs dans le crew
ACTIVE_AGENTS=retriever,summarizer,synthesizer,critic

# Configuration de l'agent retriever
RETRIEVER_MAX_DOCS=10
RETRIEVER_MIN_SCORE=0.1

# Configuration de l'agent summarizer
SUMMARIZER_MAX_LENGTH=500
SUMMARIZER_MIN_LENGTH=100

# Configuration de l'agent synthesizer
SYNTHESIZER_MAX_SOURCES=5

# Configuration de l'agent critic
CRITIC_ENABLED=true
CRITIC_MIN_CONFIDENCE=0.6

# =============================================================================
# REDIS CONFIGURATION (pour le cache et les sessions)
# =============================================================================

# URL de connexion Redis
REDIS_URL=redis://localhost:6379/0

# Mot de passe Redis (si requis)
REDIS_PASSWORD=

# Timeout de connexion Redis
REDIS_TIMEOUT=5

# TTL par défaut pour le cache (en secondes)
REDIS_CACHE_TTL=3600

# =============================================================================
# DATABASE CONFIGURATION (optionnel)
# =============================================================================

# URL de la base de données (PostgreSQL recommandé)
DATABASE_URL=postgresql://user:password@localhost:5432/mar_platform

# Nombre de connexions maximum au pool
DB_POOL_SIZE=20

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Activation des métriques Prometheus
PROMETHEUS_ENABLED=true

# Port d'exposition des métriques
PROMETHEUS_PORT=9090

# Activation de l'export des traces
TRACING_ENABLED=false

# URL du collecteur de traces (Jaeger/Zipkin)
TRACING_ENDPOINT=http://localhost:14268/api/traces

# Niveau de sampling des traces (0.0 à 1.0)
TRACING_SAMPLE_RATE=0.1

# =============================================================================
# RATE LIMITING
# =============================================================================

# Limite de requêtes par minute (par IP)
RATE_LIMIT_REQUESTS=100

# Fenêtre de temps pour le rate limiting (en secondes)
RATE_LIMIT_WINDOW=60

# Limite pour les utilisateurs authentifiés
AUTH_RATE_LIMIT_REQUESTS=1000

# Limite pour les clés API
API_KEY_RATE_LIMIT_REQUESTS=500

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Origines autorisées pour CORS (séparées par des virgules)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,http://localhost:8501

# Headers autorisés
CORS_HEADERS=*

# Méthodes autorisées
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Credentials autorisés
CORS_CREDENTIALS=true

# =============================================================================
# STOCKAGE ET FICHIERS
# =============================================================================

# Répertoire de stockage des fichiers uploadés
UPLOAD_DIR=./data/uploads

# Répertoire de stockage des sauvegardes
BACKUP_DIR=./data/backups

# Répertoire de stockage des logs
LOG_DIR=./logs

# Extensions de fichiers autorisées
ALLOWED_EXTENSIONS=txt,pdf,docx,md,json,csv

# =============================================================================
# INTERFACE UTILISATEUR (STREAMLIT)
# =============================================================================

# Port Streamlit
STREAMLIT_PORT=8501

# URL de l'API pour Streamlit
STREAMLIT_API_URL=http://localhost:8000

# Titre de l'application Streamlit
STREAMLIT_TITLE=Plateforme MAR - Multi-Agent RAG

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Tag de l'image Docker
DOCKER_IMAGE_TAG=latest

# Registry Docker
DOCKER_REGISTRY=localhost:5000

# Réseau Docker
DOCKER_NETWORK=mar-network

# =============================================================================
# KUBERNETES CONFIGURATION
# =============================================================================

# Namespace Kubernetes
K8S_NAMESPACE=mar-platform

# Ingress host
K8S_INGRESS_HOST=mar.local

# Ressources par défaut
K8S_CPU_REQUEST=100m
K8S_CPU_LIMIT=500m
K8S_MEMORY_REQUEST=256Mi
K8S_MEMORY_LIMIT=1Gi

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Activation des sauvegardes automatiques
BACKUP_ENABLED=true

# Fréquence des sauvegardes (cron expression)
BACKUP_SCHEDULE=0 2 * * *

# Rétention des sauvegardes (en jours)
BACKUP_RETENTION_DAYS=30

# Compression des sauvegardes
BACKUP_COMPRESSION=gzip

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Webhook pour les notifications
WEBHOOK_URL=

# Email pour les alertes
ADMIN_EMAIL=admin@example.com

# Configuration SMTP
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_USER=noreply@example.com
SMTP_PASSWORD=

# =============================================================================
# DÉVELOPPEMENT & TESTS
# =============================================================================

# Mode test
TEST_MODE=false

# Base de données de test
TEST_DATABASE_URL=postgresql://test:test@localhost:5432/mar_test

# Désactiver l'authentification en mode test
TEST_SKIP_AUTH=false

# Seed pour la génération de données de test
TEST_SEED=42

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Taille du cache en mémoire (en MB)
MEMORY_CACHE_SIZE=256

# Nombre de workers pour le traitement asynchrone
WORKER_CONCURRENCY=4

# Timeout par défaut pour les requêtes HTTP
HTTP_TIMEOUT=30

# Taille du pool de connexions HTTP
HTTP_POOL_SIZE=100

# =============================================================================
# CONFORMITÉ & SÉCURITÉ
# =============================================================================

# Activation de l'audit des actions
AUDIT_ENABLED=true

# Chiffrement des données sensibles
ENCRYPTION_ENABLED=true

# Clé de chiffrement (CHANGEZ EN PRODUCTION!)
ENCRYPTION_KEY=your-encryption-key-32-chars-long

# Validation stricte des inputs
STRICT_VALIDATION=true

# =============================================================================
# MODÈLES ET LICENCES
# =============================================================================

# Répertoire des modèles locaux
MODELS_DIR=./models

# Acceptation automatique des licences de modèles
AUTO_ACCEPT_MODEL_LICENSES=false

# Modèles commerciaux autorisés
COMMERCIAL_MODELS_ALLOWED=false

# =============================================================================
# EXEMPLE DE CONFIGURATION PRODUCTION
# =============================================================================

# Pour la production, assurez-vous de :
# 1. Changer toutes les clés secrètes et mots de passe
# 2. Utiliser HTTPS avec des certificats valides
# 3. Configurer un reverse proxy (nginx/traefik)
# 4. Utiliser une base de données externe (PostgreSQL)
# 5. Configurer Redis pour le cache
# 6. Activer le monitoring et les logs
# 7. Configurer les sauvegardes automatiques
# 8. Restreindre les origines CORS
# 9. Ajuster les limites de ressources
# 10. Activer l'audit et la sécurité

# =============================================================================
# NOTES D'INSTALLATION
# =============================================================================

# 1. Copiez ce fichier vers .env
# 2. Adaptez les valeurs selon votre environnement
# 3. Créez les répertoires nécessaires :
#    - mkdir -p data/{vector_store,uploads,backups}
#    - mkdir -p logs
# 4. Installez les dépendances : pip install -r requirements.txt
# 5. Démarrez Ollama : ollama serve
# 6. Téléchargez un modèle : ollama pull llama2
# 7. Démarrez l'API : python -m api.main
# 8. Démarrez l'UI : streamlit run ui/streamlit/app.py
